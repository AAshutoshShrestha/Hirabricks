# Generated by Django 4.2.9 on 2024-02-03 08:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Thermocouple',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the thermocouple', max_length=50, unique=True)),
                ('temperature', models.FloatField(blank=True, help_text='Temperature of the thermocouple in degrees Celsius', null=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the zone', max_length=50)),
                ('area', models.CharField(choices=[('PRE HEATING', 'Pre Heating'), ('HEATING', 'Heating'), ('COOLING', 'Cooling')], default='Pre Heating', help_text='SECTION ZONES CATEGORY', max_length=20)),
                ('thermocouple', models.ForeignKey(help_text='Thermocouple assigned to the zone', on_delete=django.db.models.deletion.CASCADE, related_name='zones', to='example.thermocouple')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TemperatureRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date of the temperature record')),
                ('time', models.TimeField(help_text='Time of the temperature record')),
                ('temperature', models.FloatField(help_text='Temperature recorded in degrees Celsius')),
                ('thermocouple', models.ForeignKey(help_text='Thermocouple associated with the temperature record', on_delete=django.db.models.deletion.CASCADE, related_name='temperature_records', to='example.thermocouple')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Firing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone', models.ForeignKey(help_text='Zone where the Firing is located', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Firing', to='example.zone')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_number', models.CharField(max_length=20)),
                ('entry_time', models.DateTimeField(default=django.utils.timezone.now, help_text='Time when the car enters the zone')),
                ('exit_time', models.DateTimeField(blank=True, help_text='Time when the car exits the tunnel', null=True)),
                ('status', models.CharField(choices=[('INLINE', 'Inline'), ('COMPLETED', 'Completed')], default='INLINE', help_text='Status of the car (INLINE or COMPLETED)', max_length=20)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('zone', models.ForeignKey(help_text='Zone where the car is located', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cars', to='example.zone')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
    ]
